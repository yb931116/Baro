<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="statistics">
	<select id="getListById" resultType="Map" parameterType="Map">
	select u.name NAME,
       u.id ID,
       (select count(l.original_no)
        from logic l
		where l.user_id = u.user_id and
              l.category='problem') PRONUM ,
	   (select count(l.original_no)
        from logic l
        where l.user_id = u.user_id and
              l.category='answer') ANSNUM,
		(select count(distinct p.project_no)
         from project p,logic l
         where p.project_no = l.project_no and
			   l.user_id  = u.user_id) PROJECTNUM
        from user_info u 
        order by PRONUM desc, ANSNUM desc;	
	</select>
	
	<select id="listpagination" resultType="Map" parameterType="Map">
	SELECT B.*
	FROM        
		(SELECT @RNUM := @RNUM + 1 AS ROWNUM, A.*
		 FROM	 (SELECT 
					  user_info.NAME, user_info.ID, 
					  (SELECT count(logic.original_no) 
					   FROM logic 
					   WHERE logic.user_id = user_info.user_id and logic.category = 'problem') PRONUM,
					  (SELECT count(logic.original_no) 
					   FROM logic 
					   WHERE logic.user_id = user_info.user_id and logic.category = 'answer') ANSNUM,
					  (SELECT count(distinct project.project_no) 
					   FROM project, logic 
					   WHERE project.project_no = logic.project_no and logic.user_id = user_info.user_id) PROJECTNUM
					   
				  FROM user_info, (SELECT @RNUM := 0) R
				  ORDER BY PRONUM desc, ANSNUM desc
				  ) A) B
	WHERE B.ROWNUM between #{pagination.pageBegin} and #{pagination.pageEnd}	
	</select>
	<select id = "totalcount" resultType="integer" parameterType="Map">
		select count(*) from user_info
	</select>
	
	<select id="SearchProject" resultType="Map" parameterType="Map">
		select p.project_no, p.project_name, i.name , i.user_id , i.id ,
			   (select count(l.original_no)
		        from logic l
				where l.user_id = i.user_id and
		              l.category='problem') PRONUM ,
			   (select count(l.original_no)
		        from logic l
		        where l.user_id = i.user_id and
		              l.category='answer') ANSNUM
		from project p , logic l , user_info i
		where p.project_no = l.project_no and
			  l.user_id = i.user_id and
		      p.project_name like #{projectName}
		group by i.name
		order by p.project_no , i.name;

	</select>

	<insert id="merge" parameterType="Map">
	</insert>

	<insert id="insert" parameterType="Map">
	</insert>

	<update id="update" parameterType="Map">
	</update>

	<delete id="delete" parameterType="Map">
	</delete>
</mapper>