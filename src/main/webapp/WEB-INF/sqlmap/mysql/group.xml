<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="group">
    
    <insert id="member_insert" parameterType ="Map">
<!-- 		INSERT ALL -->
			INSERT INTO GROUPING_MEMBER(
					GROUP_NO	
					,USER_ID 		
				)values
			<foreach collection="ID_LIST" item = "item" index="index"  separator=",">
				(
					#{GROUP_NO}
					,(SELECT USER_ID
					  FROM USER_INFO
				      WHERE ID = #{item})	 
				)
			</foreach>
	</insert>
	
	<insert id="insert" parameterType="Map">
	    INSERT INTO GROUPING (
			GROUP_NO 
			, GROUP_NAME 
			, GENERATING_DATE 
			, USER_ID 
			 
		)
		values
		(
			#{GROUP_NO}  
			, #{group_name} 
			, now()
			, (SELECT USER_ID
				 FROM USER_INFO
				 WHERE ID = #{ID})			
		)
	</insert>
<!-- 	<select id = "list" resultType="Map" parameterType="Map"> -->
	
<!-- 		select g.group_no group_no, g.group_name gname, ui.name uname, ui.id id -->
<!-- 		from grouping g INNER JOIN grouping_member gm -->
<!-- 			ON g.group_no = gm.group_no RIGHT OUTER JOIN user_info ui -->
<!--     		ON ui.user_id = gm.user_id -->
<!-- 		where g.group_no is not null and g.user_id = (select user_id from user_info where id = #{ID}) -->
<!-- 	</select> -->
	
	<select id = "mygroup_list" resultType="Map" parameterType="Map">
		
			select g.group_no group_no, g.group_name gname, ui.name uname, ui.id id
			from grouping g INNER JOIN grouping_member gm
				ON g.group_no = gm.group_no RIGHT OUTER JOIN user_info ui
	    		ON ui.user_id = gm.user_id
			where g.group_no is not null and g.user_id = (select user_id from user_info where id = #{ID})
			 and g.group_name = #{groupName.group_name}
		
	</select>
	
	<select id = "groupname_list" resultType="Map" parameterType="Map">
		select group_name from grouping where user_id = (select user_id from user_info where id = #{ID})
	</select>
	
	<delete id = "group_member_delete" parameterType = "Map">
		delete from grouping_member 
		where group_no = (select group_no from grouping where group_name = #{group_name} )
	</delete>
	
	<delete id = "group_delete" parameterType = "Map">
		delete from grouping
		where group_name = #{group_name}
	</delete>
	
	<insert id = "group_update" parameterType = "Map" >	
		INSERT INTO GROUPING_MEMBER(
					GROUP_NO	
					,USER_ID 		
				)values
			<foreach collection="ID_LIST" item = "item" index="index"  separator=",">
				(
					(select group_no 
					from grouping 
					where group_name = #{group_name} )
					,(SELECT USER_ID
					  FROM USER_INFO
				      WHERE ID = #{item})	 
				)
			</foreach>
		
		
		
	</insert>
	
	<select id = "group_list" resultType="Map" parameterType="Map">
		SELECT grouping.group_no, grouping.group_name, grouping.user_id, user_info.id, user_info.name, 
		((SELECT count(*) FROM grouping_member WHERE grouping.group_no = grouping_member.group_no)-1) group_count
		FROM grouping INNER JOIN user_info
		ON grouping.user_id = user_info.user_id
	</select>
	
	<select id = "group_list_search" resultType="Map" parameterType="Map">
		SELECT grouping.group_no, grouping.group_name, grouping.user_id, user_info.id, user_info.name, 
		((SELECT count(*) FROM grouping_member WHERE grouping.group_no = grouping_member.group_no)-1) group_count
		FROM grouping INNER JOIN user_info
		ON grouping.user_id = user_info.user_id
		<![CDATA[
		where 1 = 1
		and grouping.group_name like CONCAT('%',#{group_name},'%')
		]]>
	</select>
	
	<select id = "group_evaluation_list" resultType = "Map" parameterType = "Map">
		SELECT user_info.id, user_info.name, 
				(SELECT count(*) FROM logic WHERE grouping_member.user_id = logic.user_id and category = 'problem') problem_count, 
				(SELECT count(*) FROM logic WHERE grouping_member.user_id = logic.user_id and category = 'answer') answer_count 
		FROM user_info INNER JOIN grouping_member
		ON user_info.user_id = grouping_member.user_id
		WHERE grouping_member.group_no= #{group_no};
	</select>
	
	<select id="listpagination" resultType="Map" parameterType="Map">
		SELECT grouping.*, user_info.id, user_info.name, 
				((SELECT count(*) FROM grouping_member WHERE grouping.group_no = grouping_member.group_no)-1) group_count
		FROM (
			SELECT @RNUM := @RNUM + 1 AS ROWNUM, groups.*
			FROM ( select * from grouping) groups, ( SELECT @RNUM := 0 ) R
            ORDER by generating_date
		) grouping INNER JOIN user_info
        ON grouping.user_id = user_info.user_id
		WHERE grouping.ROWNUM between #{pagination.pageBegin} and #{pagination.pageEnd}
	</select>
	<select id="listpagination_search" resultType="Map" parameterType="Map">
		SELECT grouping.*, user_info.id, user_info.name, 
				((SELECT count(*) FROM grouping_member WHERE grouping.group_no = grouping_member.group_no)-1) group_count
		FROM (
			SELECT @RNUM := @RNUM + 1 AS ROWNUM, groups.*
			FROM ( select * from grouping) groups, ( SELECT @RNUM := 0 ) R
			<![CDATA[
			where 1= 1
			and groups.group_name like CONCAT('%',#{group_name},'%')
			]]>
            ORDER by generating_date
		) grouping INNER JOIN user_info
        ON grouping.user_id = user_info.user_id
		WHERE grouping.ROWNUM between #{pagination.pageBegin} and #{pagination.pageEnd}
		
	</select>
	
	<select id="totalcount" resultType="integer" parameterType="Map">
		SELECT count(group_no)
		FROM grouping
	</select>
	<select id="totalcount_search" resultType="integer" parameterType="Map">
		SELECT count(group_no)
		FROM grouping
		<![CDATA[
		where 1 = 1
		and grouping.group_name like CONCAT('%',#{group_name},'%')
		]]>
	</select>
	
	
	</mapper>