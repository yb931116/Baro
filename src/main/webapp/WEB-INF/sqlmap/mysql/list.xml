<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="list">
	<select id="list" resultType="Map" parameterType="Map">
	    select 
			b.business_no business_no <!-- 프로젝트_SEQ -->
			, b.business_name business_name <!-- 프로젝트명 -->
			, u.id id <!-- 프로젝트 생성자 ID -->
			,u.name name
			
			,(select count(*)
		   	 from logic l
			 where l.business_no = b.business_no and
			 l.category="problem") problem_sum  
			 
			 ,(select count(*)
			  from logic l
			  where l.business_no = b.business_no and
			  l.category="answer") anwser_sum
			  
		from business b, user_info u
		<![CDATA[
		where 1 = 1 
		and b.user_id=u.user_id
		]]>
		order by b.business_no
	</select>
	
		<select id="search" resultType="Map" parameterType="Map">
	    select 
			b.business_no business_no <!-- 프로젝트_SEQ -->
			, b.business_name business_name <!-- 프로젝트명 -->
			, u.id id <!-- 프로젝트 생성자 ID -->
			,u.name name
			
			,(select count(*)
		   	 from logic l
			 where l.business_no = b.business_no and
			 l.category="problem") problem_sum  
			 
			 ,(select count(*)
			  from logic l
			  where l.business_no = b.business_no and
			  l.category="answer") anwser_sum
			  
		from business b, user_info u
		<![CDATA[
		where 1 = 1
		and b.user_id=u.user_id 
		and b.business_name like CONCAT('%',#{business_name},'%')
		]]>
		order by business_no
	</select>
	

	<select id="read" resultType="Map" parameterType="Map">
	</select>

	<insert id="insert" parameterType="Map">
		INSERT INTO business
		(
			business_no,
			business_name,
			generating_date,
			user_id
		)
		VALUES
		(
			uuid(),
			#{business_name},
			now(),
			(select user_id from user_info where id = #{id})
		);
	</insert>

	<select id = "totalcount" resultType="integer" parameterType="Map">
		select count(business_no) from business
	</select>
	<select id = "listpagination" resultType="Map" parameterType="Map">
        select project.*
        from
			(select @RNUM := @RNUM + 1 AS ROWNUM, business.business_no, business.business_name, user_info.id, user_info.name,
				   (select count(*) from logic inner join business on logic.business_no = business.business_no where logic.category = "problem") problem_sum,
				   (select count(*) from logic inner join business on logic.business_no = business.business_no where logic.category = "anwser") anwser_sum
			from business inner join user_info
			on business.user_id = user_info.user_id, (select @RNUM := 0) R) project
        where project.ROWNUM between #{pagination.pageBegin} and #{pagination.pageEnd}
        order by project.business_no;
	</select>
	<select id = "totalcount_search" resultType="integer" parameterType="Map">
		select count(business_no) from business
		<![CDATA[
			where 1 = 1 
			and business.business_name like CONCAT('%',#{business_name},'%')
		]]>
	</select>
	<select id = "listpagination_search" resultType="Map" parameterType="Map">
		select project.*
        from
			(select @RNUM := @RNUM + 1 AS ROWNUM, business.business_no, business.business_name, user_info.id, user_info.name,
				   (select count(*) from logic inner join business on logic.business_no = business.business_no where logic.category = "problem") problem_sum,
				   (select count(*) from logic inner join business on logic.business_no = business.business_no where logic.category = "anwser") anwser_sum
			from business inner join user_info
			on business.user_id = user_info.user_id, (select @RNUM := 0) R
			<![CDATA[
				where 1 = 1
				and business.business_name like CONCAT('%',#{business_name},'%')
			]]> ) project
        where project.ROWNUM between #{pagination.pageBegin} and #{pagination.pageEnd}
        order by project.business_no;
	</select>
</mapper>